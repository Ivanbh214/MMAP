#!/bin/bash

#working directory /home/ivan/Escritorio/Material_vigente_septiembre/Run1/Art/Raw_data
mkdir /home/MMAP/Art/Raw_data/ #Working directory, change the path according to your needs
mkdir /home/MMAP/Art/Merged/
mkdir /home/MMAP/Art/Statistic/
mkdir /home/MMAP/Art/filtered/
mkdir /home/MMAP/Art/fasta/
mkdir /home/MMAP/Art/split/
mkdir /home/MMAP/Art/split_pp/
mkdir /home/MMAP/Art/trim/
mkdir /home/MMAP/Art/Without_primers/
mkdir /home/MMAP/Art/Vsearch/
mkdir /home/MMAP/Art/Vsearch/cluster1/
mkdir /home/MMAP/Art/Vsearch/cluster2/
mkdir /home/MMAP/Art/Vsearch/cluster1/
mkdir /home/MMAP/Art/rename/
mkdir /home/MMAP/Art/Blast/
mkdir /home/MMAP/Art/Basta/
#Merge. You adjust the parameter to your length of amplicons generated by your primers
cd /home/MMAP/Art/Raw_data/
(echo merge_sequence

for f in *_R1_*.fastq; do

    r=$(sed -e "s/_R1_/_R2_/" <<< "$f")
    s=$(cut -d_ -f1 <<< "$f")

    echo
    echo ====================================
    echo Processing sample $s
    echo ====================================
  
vsearch\
        --fastq_mergepairs ${f}\
        --reverse  ${r} \
        --fastq_minovlen 20 \
        --fastq_maxdiffs 196 \
        --fastqout ${s}.merged.fastq \
        --fastq_eeout

mv *.merged.fastq /home/MMAP/Art/Merged/

done




cd /home/MMAP/Art/Merged/


for f in *.fastq; do


    echo
    echo ====================================
    echo Processing sample $f
    echo ====================================

    vsearch\
        --fastq_stats ${f}\
	    --log  ${f}.Art.Run_1

done

       
mv *.Art.Run_1 /home/MMAP/Art/Statistic/



#Filter

echo filtering 


for i in *.fastq; do fastq_quality_filter -v -q 30 -p 75 -i $i -o/home/MMAP/Art/filtered/$(basename $i .fastq).fastq; done


cd /home/MMAP/Art/filtered/

#Fastq a fasta

echo fastq_to_fasta

for i in *.fastq; do fastq_to_fasta  -i  $i -o /home/MMAP/Art/fasta/$(basename $i .fastq).fasta;done


echo elmination of N (indefferentiation)
cd /home/MMAP/Art/fasta/

for i in *.fasta; do sed 's/N//g' $(basename $i .fasta).fasta > $(basename $i .fasta)_f_N.fasta;done


echo Introduction in the header of the sequences 
#You could introduce another letters or eliminate. The number of letter is in relation to the number of samples, in my case 40 samples in this run

sed 's/^>/>A/g' A.merged_f_N.fasta>A_L.fasta

sed 's/^>/>C/g' C.merged_f_N.fasta>C_L.fasta

sed 's/^>/>E/g' E.merged_f_N.fasta>E_L.fasta

sed 's/^>/>G/g' G.merged_f_N.fasta>G_L.fasta

sed 's/^>/>I/g' I.merged_f_N.fasta>I_L.fasta

sed 's/^>/>K/g' K.merged_f_N.fasta>K_L.fasta

sed 's/^>/>LL/g' LL.merged_f_N.fasta>LL_L.fasta

sed 's/^>/>N/g' N.merged_f_N.fasta>N_L.fasta

sed 's/^>/>O/g' O.merged_f_N.fasta>O_L.fasta

sed 's/^>/>Q/g' Q.merged_f_N.fasta>Q_L.fasta

sed 's/^>/>S/g' S.merged_f_N.fasta>S_L.fasta

sed 's/^>/>U/g' U.merged_f_N.fasta>U_L.fasta

sed 's/^>/>W/g' W.merged_f_N.fasta>W_L.fasta

sed 's/^>/>Y/g' Y.merged_f_N.fasta>Y_L.fasta

sed 's/^>/>Aa/g' Aa.merged_f_N.fasta>Aa_L.fasta

sed 's/^>/>Ca/g' Ca.merged_f_N.fasta>Ca_L.fasta

sed 's/^>/>Ea/g' Ea.merged_f_N.fasta>Ea_L.fasta

sed 's/^>/>Ga/g' Ga.merged_f_N.fasta>Ga_L.fasta

sed 's/^>/>Ia/g' Ia.merged_f_N.fasta>Ia_L.fasta

sed 's/^>/>Ka/g' Ka.merged_f_N.fasta>Ka_L.fasta

sed 's/^>/>LLa/g' LLa.merged_f_N.fasta>LLa_L.fasta

sed 's/^>/>Na/g' Na.merged_f_N.fasta>Na_L.fasta

sed 's/^>/>Oa/g' Oa.merged_f_N.fasta>Oa_L.fasta

sed 's/^>/>Qa/g' Qa.merged_f_N.fasta>Qa_L.fasta

sed 's/^>/>Sa/g' Sa.merged_f_N.fasta>Sa_L.fasta

sed 's/^>/>Ua/g' Ua.merged_f_N.fasta>Ua_L.fasta

sed 's/^>/>Wa/g' Wa.merged_f_N.fasta>Wa_L.fasta

sed 's/^>/>Ya/g' Ya.merged_f_N.fasta>Ya_L.fasta

sed 's/^>/>Ib/g' Ib.merged_f_N.fasta>Ib_L.fasta

sed 's/^>/>Mb/g' Mb.merged_f_N.fasta>Mb_L.fasta

sed 's/^>/>NYb/g' NYb.merged_f_N.fasta>NYb_L.fasta

sed 's/^>/>Pb/g' Pb.merged_f_N.fasta>Pb_L.fasta

sed 's/^>/>Rb/g' Rb.merged_f_N.fasta>Rb_L.fasta

sed 's/^>/>Tb/g' Tb.merged_f_N.fasta>Tb_L.fasta

sed 's/^>/>Vb/g' Vb.merged_f_N.fasta>Vb_L.fasta

sed 's/^>/>Xb/g' Xb.merged_f_N.fasta>Xb_L.fasta

sed 's/^>/>Zb/g' Zb.merged_f_N.fasta>Zb_L.fasta

sed 's/^>/>Bc/g' Bc.merged_f_N.fasta>Bc_L.fasta

sed 's/^>/>Dc/g' Dc.merged_f_N.fasta>Dc_L.fasta

sed 's/^>/>Fc/g' Fc.merged_f_N.fasta>Fc_L.fasta

sed 's/^>/>Hc/g' Hc.merged_f_N.fasta>Hc_L.fasta

cat *_L.fasta > Run1_artropodos.fasta

mv Run1_artropodos.fasta /home/MMAP/Art/split/


# split_by_lenght

echo split and split_pp and trim

python /home/MMAP/Art/split/split_run1.py; 

python /home/MMAP/Art/split_pp/split_pp_Art_Run1.py;	

python /home/MMAP/Art/trim/trim_pp_run1.py;)|& tee output_split_trim_Run1_Art.log 
 



